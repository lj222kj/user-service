// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package users is a generated GoMock package.
package users

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetUserSummary mocks base method
func (m *MockService) GetUserSummary(arg0 []string) []*User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserSummary", arg0)
	ret0, _ := ret[0].([]*User)
	return ret0
}

// GetUserSummary indicates an expected call of GetUserSummary
func (mr *MockServiceMockRecorder) GetUserSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserSummary", reflect.TypeOf((*MockService)(nil).GetUserSummary), arg0)
}

// MockDatabase is a mock of Database interface
type MockDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseMockRecorder
}

// MockDatabaseMockRecorder is the mock recorder for MockDatabase
type MockDatabaseMockRecorder struct {
	mock *MockDatabase
}

// NewMockDatabase creates a new mock instance
func NewMockDatabase(ctrl *gomock.Controller) *MockDatabase {
	mock := &MockDatabase{ctrl: ctrl}
	mock.recorder = &MockDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDatabase) EXPECT() *MockDatabaseMockRecorder {
	return m.recorder
}

// GetUserSummary mocks base method
func (m *MockDatabase) GetUserSummary(arg0 []string) []*User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserSummary", arg0)
	ret0, _ := ret[0].([]*User)
	return ret0
}

// GetUserSummary indicates an expected call of GetUserSummary
func (mr *MockDatabaseMockRecorder) GetUserSummary(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserSummary", reflect.TypeOf((*MockDatabase)(nil).GetUserSummary), arg0)
}
